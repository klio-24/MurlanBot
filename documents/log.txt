6/12 - when making this code I'm going to try google as little as possible, even how to format the card system, and then review and modify after

going to use python dictionaries as the key value thing works well
then all the dictionaries together form a list

ok so from this video it seems the AI strategy should be ISMCTS as the game is too complex to create evaluation function, and cant use MCTS as other player is involved. I think this means I need to make a 'possible moves' list for each hand, then the process picks from this

7/12 - making two files, one which is a library for all possible moves, one of them is a function which then extracts only the ones which are possible from a game situation. This links into the monte carlo thing because I need a way to play a random move from all possible moves. Just not sure what the right data structure is because possible moves will form a three dimensional. WAIT just realised I just need to make the function, and the library of possible moves can come from just passing the whole deck to the function.

17/3 - it's tempting to do the website at the start to 'get it out the way' but it's still a time sink that provides very little improvement to your employability because everyone knows front-end, so focus on implementing the actual engine, you can just do the website at the end as it's the simplest part

18/3 - not implementing prison straight

19/3 - checking how many possible combinations for straights made me now plan to skip straights altogether as there will also be big training requirements - I really want a minimum viable product as soon as possible.

I'm also going to skip quads because they have the power to take a turn, so I'll implement that behaviour later.